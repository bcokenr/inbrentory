// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id                      String       @id @default(uuid())
  name                    String
  description             String?       @db.Text
  costBasis               Decimal?     @db.Decimal(10, 2)
  transactionPrice        Decimal?     @db.Decimal(10, 2)
  listPrice               Decimal      @db.Decimal(10, 2)
  discountedListPrice     Decimal?     @db.Decimal(10, 2)
  hasPrintedTag           Boolean      @default(false)
  storeCreditAmountApplied Decimal?    @db.Decimal(10, 2)
  keywords                String?      @db.Text
  measurements            String?      @db.Text
  quantity                Int          @default(1)
  createdAt               DateTime     @default(now())
  updatedAt               DateTime     @updatedAt

  // ðŸ”— Relationships
  categories              ItemCategory[]
  transaction             Transaction? @relation(fields: [transactionId], references: [id])
  transactionId           String?

  @@index([transactionId])
}

model Category {
  id          String          @id @default(uuid())
  name        String           @unique
  items       ItemCategory[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now())
}

model Transaction {
  id          String       @id @default(uuid())
  total       Decimal      @db.Decimal(10, 2)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())

  // ðŸ”— Relationships
  items       Item[]
}

model ItemCategory {
  itemId      String
  categoryId  String
  item        Item       @relation(fields: [itemId], references: [id], onDelete: Cascade)
  category    Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([itemId, categoryId])
}
